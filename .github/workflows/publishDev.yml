name: publish-videobox

on:
  push:
    branches: ['develop']

jobs:
  create-docker-image:
    runs-on: ubuntu-20.04
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_BACKAPP_PREDIX }}

      - name: Build Predix backapp image
        run: |
          docker build . --tag ghcr.io/lusis-developers/predix-backapp:latest
          docker push ghcr.io/lusis-developers/predix-backapp:latest

  deploy:
    needs: create-docker-image
    runs-on: ubuntu-20.04
    steps:
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to DONW WEB VPS
        env:
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_USER: ${{ secrets.VPS_USER }}
          SSH_PASSWORD: ${{ secrets.VPS_PASSWORD }}
        run: |
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST -p5219 << EOF
            echo "Starting SSH script"
            echo "Checking if container exists..."
            if docker inspect myapp-dev &> /dev/null; then
              echo "Container myapp-dev exists, stopping and removing..."
              docker stop myapp-dev
              docker rm myapp-dev
            else
              echo "Container myapp-dev does not exist."
            fi

            echo "Logging into Docker registry..."
            docker login ghcr.io -u lusis-developers -p ${{secrets.TOKEN_BACKAPP_PREDIX}}

            echo "Pulling the latest Docker image..."
            docker pull ghcr.io/lusis-developers/predix-backapp:latest

            echo "Running the Docker container..."

            docker run -d \
              --name myapp-dev \
              -p 8081:3000 \
              --restart always \
              -e MONGODB_URI='${{ secrets.MONGODB_URI_DEVELOPMENT }}' \
              -e NODE_ENV='${{ secrets.NODE_ENV_DEVELOPMENT }}' \
              -e TYPE='${{ secrets.TYPE }}' \
              -e PROJECT_ID='${{ secrets.PROJECT_ID }}' \
              -e PRIVATE_KEY='${{ secrets.PRIVATE_KEY }}' \
              -e CLIENT_EMAIL='${{ secrets.CLIENT_EMAIL }}' \
              -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
              -e SENDGRID_API_KEY='${{ secrets.SENDGRID_API_KEY }}' \
              ghcr.io/yeyodev1/videobox-backapp:latest
            echo "done..."
          EOF
